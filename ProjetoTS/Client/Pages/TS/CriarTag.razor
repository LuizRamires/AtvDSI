@page "/TS/CriarTag"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="card m-3">
    <h4 class="card-header">Cadastro das Tags</h4>
    <div class="card-body">
        <EditForm Model="@tag" OnValidSubmit="Validacao" @onreset="Reset">
            <DataAnnotationsValidator />
            <div class="form-row">
                <div class="form-group col">
                    <label>Id</label>
                    <InputNumber @bind-Value="tag.TagId" class="form-control" />
                    <ValidationMessage For="@(() => tag.TagId)" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col">
                    <label>Nome</label>
                    <InputText @bind-Value="tag.Nome" class="form-control" />
                    <ValidationMessage For="@(() => tag.Nome)" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col">
                    <label>Id Produto</label>
                    <InputNumber @bind-Value=@idProduto class="form-control"/>
                   
                </div>
            </div>
            <div class="text-center">
                <button type="submit" class="btn btn-primary mr-1">Salvar</button>
                <button type="reset" class="btn btn-secondary">Cancel</button>
            </div>
        </EditForm>
       
    </div>
</div>

@code {
    private Tag tag = new Tag();
    private EditContext editContext { get; set; }
    private Produto produto;
    int idProduto;


    private Produto RetornarProduto()
    {
        return produto = ("/Produto/PegaId?id={idProduto}");
    }

    protected override Task OnInitializedAsync()
    {
        produto = Http.GetFromJsonAsync<Produto>($"/Produto/PegaId?id={idProduto}"); //recebe um produto pelo Id enviado do controller que busca no db

    }

    private async Task Validacao()
    {
        var t1 = await Http.PostAsJsonAsync("/Tag/Criar", tag); //manda para o controller criar uma tag por um  Json Async
        NavigationManager.NavigateTo("TS/ListarTag"); // Navega até o endereco forçando o navegador a dar reload 
    }

    private void Reset()
    {
        tag = new Tag();
        editContext = new EditContext(tag); //assim a validação nao é atualizada
    }

}
